// <auto-generated />
using System;
using ControleDeCinema.Infra.Orm.Compartilhado;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ControleDeCinema.Infra.Orm.Migrations
{
    [DbContext(typeof(ControleDeCinemaDbContext))]
    [Migration("20240802171706_configdatabase")]
    partial class configdatabase
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ControleDeCinema.Dominio.ModuloFilme.Filme", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Duracao")
                        .HasColumnType("int");

                    b.Property<bool>("Estreia")
                        .HasColumnType("bit");

                    b.Property<string>("Genero")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.HasKey("Id");

                    b.ToTable("TbFilme", (string)null);
                });

            modelBuilder.Entity("ControleDeCinema.Dominio.ModuloFuncionario.Funcionario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.HasKey("Id");

                    b.ToTable("TbFuncionario", (string)null);
                });

            modelBuilder.Entity("ControleDeCinema.Dominio.ModuloSala.Sala", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Capacidade")
                        .HasColumnType("int");

                    b.Property<int>("Numero")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("TbSala", (string)null);
                });

            modelBuilder.Entity("ControleDeCinema.Dominio.ModuloSessao.ModuloIngresso.Ingresso", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("FuncionarioId")
                        .HasColumnType("int");

                    b.Property<int>("NumeroPoltrona")
                        .HasColumnType("int");

                    b.Property<int>("SessaoId")
                        .HasColumnType("int");

                    b.Property<int>("Sessao_Id")
                        .HasColumnType("int");

                    b.Property<int>("Tipo")
                        .HasColumnType("int");

                    b.Property<float>("Valor")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.HasIndex("FuncionarioId");

                    b.HasIndex("SessaoId");

                    b.HasIndex("Sessao_Id");

                    b.ToTable("TbIngresso", (string)null);
                });

            modelBuilder.Entity("ControleDeCinema.Dominio.ModuloSessao.Sessao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Filme_Id")
                        .HasColumnType("int");

                    b.Property<DateTime>("Horario")
                        .HasColumnType("datetime2");

                    b.Property<int>("IngressosDisponiveis")
                        .HasColumnType("int");

                    b.Property<int>("Sala_Id")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Filme_Id");

                    b.HasIndex("Sala_Id");

                    b.ToTable("TbSessao", (string)null);
                });

            modelBuilder.Entity("ControleDeCinema.Dominio.ModuloSessao.ModuloIngresso.Ingresso", b =>
                {
                    b.HasOne("ControleDeCinema.Dominio.ModuloFuncionario.Funcionario", "Funcionario")
                        .WithMany()
                        .HasForeignKey("FuncionarioId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_TbIngresso_TbFuncionario");

                    b.HasOne("ControleDeCinema.Dominio.ModuloSessao.Sessao", "Sessao")
                        .WithMany()
                        .HasForeignKey("SessaoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ControleDeCinema.Dominio.ModuloSessao.Sessao", null)
                        .WithMany("Ingressos")
                        .HasForeignKey("Sessao_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_TbSessao_TbIngresso");

                    b.Navigation("Funcionario");

                    b.Navigation("Sessao");
                });

            modelBuilder.Entity("ControleDeCinema.Dominio.ModuloSessao.Sessao", b =>
                {
                    b.HasOne("ControleDeCinema.Dominio.ModuloFilme.Filme", "Filme")
                        .WithMany("Sessoes")
                        .HasForeignKey("Filme_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("Fk_TbSessao_TbFilme");

                    b.HasOne("ControleDeCinema.Dominio.ModuloSala.Sala", "Sala")
                        .WithMany("Sessoes")
                        .HasForeignKey("Sala_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_TbSessao_TbSala");

                    b.Navigation("Filme");

                    b.Navigation("Sala");
                });

            modelBuilder.Entity("ControleDeCinema.Dominio.ModuloFilme.Filme", b =>
                {
                    b.Navigation("Sessoes");
                });

            modelBuilder.Entity("ControleDeCinema.Dominio.ModuloSala.Sala", b =>
                {
                    b.Navigation("Sessoes");
                });

            modelBuilder.Entity("ControleDeCinema.Dominio.ModuloSessao.Sessao", b =>
                {
                    b.Navigation("Ingressos");
                });
#pragma warning restore 612, 618
        }
    }
}
